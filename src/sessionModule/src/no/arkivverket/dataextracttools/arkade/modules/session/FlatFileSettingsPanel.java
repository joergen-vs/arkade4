/*
 * The National Archives of Norway - 2014
 */
package no.arkivverket.dataextracttools.arkade.modules.session;

import javax.swing.SpinnerNumberModel;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 * Panel for various settings for handling flat files.
 *
 *
 * @version 0.10 2014-03-28
 * @author Riksarkivet
 */
public class FlatFileSettingsPanel extends javax.swing.JPanel {
    
    private final static int MIN_INSERTS_VALUE = 1;
    private final static int MAX_INSERTS_VALUE = Integer.MAX_VALUE;
    private final static int INSERTS_STEP = 1000;
    private final static int DEFAULT_NUMBER_OF_INSERTS = 8000;
    private SpinnerNumberModel insertsSpinnerModel;    

    public boolean isCreateDatabaseSelected() {
        return createFlatFileDatabaseCheckBox.isSelected();
    }

    public void setCreateDatabase(boolean createDatabase) {
        createFlatFileDatabaseCheckBox.setSelected(createDatabase);
    }

    public boolean isCreateDatabaseIndexesSelected() {
        return createDatabaseIndexesCheckBox.isSelected();
    }

    public void setCreateDatabaseIndexes(boolean createDatabaseIndexes) {
        createDatabaseIndexesCheckBox.setSelected(createDatabaseIndexes);
    }

    public int getNumberOfInsertsBeforeCommit() {
        return this.insertsSpinnerModel.getNumber().intValue();
    }

    public boolean isDelimitedFilesHaveHeaderSelected() {
        return delimitedFilesHaveHeaderCheckBox.isSelected();
    }
    
    public boolean isAnalyseFlatFilesSelected() {
        return analyseFlatFilesCheckBox.isSelected();
    }
    
    public boolean isControlFlatFilesSelected() {
        return controlFlatFilesCheckBox.isSelected();
    }
    
    public boolean isAnalyseFieldsSelected() {
        return analyseFieldsCheckBox.isSelected();
    }
    
    public boolean isControlFieldsSelected() {
        return controlFieldsCheckBox.isSelected();
    }    
    
    public boolean isControlKeysSelected() {
        return controlKeysCheckBox.isSelected();
    }

    public boolean isControlForeignKeysSelected() {
        return controlForeignKeysCheckBox.isSelected();
    }

    public boolean isControlUniquenessSelected() {
        return controlUniquenessCheckBox.isSelected();
    }

    public boolean isIgnoreProcessesSelected() {
        return ignoreProcessesCheckBox.isSelected();
    }
    
    /**
     * Creates new form FlatFileSettingsPanel
     */
    public FlatFileSettingsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        processesPanel = new javax.swing.JPanel();
        ignoreProcessesCheckBox = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        analyseFlatFilesCheckBox = new javax.swing.JCheckBox();
        controlFlatFilesCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        controlKeysCheckBox = new javax.swing.JCheckBox();
        controlForeignKeysCheckBox = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        analyseFieldsCheckBox = new javax.swing.JCheckBox();
        controlFieldsCheckBox = new javax.swing.JCheckBox();
        controlUniquenessCheckBox = new javax.swing.JCheckBox();
        databasePanel = new javax.swing.JPanel();
        createFlatFileDatabaseCheckBox = new javax.swing.JCheckBox();
        createDatabaseIndexesCheckBox = new javax.swing.JCheckBox();
        numberOfInsertsBeforeCommitLabel = new javax.swing.JLabel();
        numberOfInsertsBeforeCommitSpinner = new javax.swing.JSpinner();
        flatFileSettingsInfoButton = new javax.swing.JButton();
        formatPanel = new javax.swing.JPanel();
        delimitedFilesHaveHeaderCheckBox = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(ignoreProcessesCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.ignoreProcessesCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(analyseFlatFilesCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.analyseFlatFilesCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(controlFlatFilesCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.controlFlatFilesCheckBox.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(analyseFlatFilesCheckBox)
                    .addComponent(controlFlatFilesCheckBox))
                .addContainerGap(588, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analyseFlatFilesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlFlatFilesCheckBox)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(controlKeysCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.controlKeysCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(controlForeignKeysCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.controlForeignKeysCheckBox.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlKeysCheckBox)
                    .addComponent(controlForeignKeysCheckBox))
                .addContainerGap(498, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controlKeysCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlForeignKeysCheckBox)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(analyseFieldsCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.analyseFieldsCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(controlFieldsCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.controlFieldsCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(controlUniquenessCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.controlUniquenessCheckBox.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlFieldsCheckBox)
                    .addComponent(analyseFieldsCheckBox)
                    .addComponent(controlUniquenessCheckBox))
                .addContainerGap(556, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analyseFieldsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlFieldsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlUniquenessCheckBox)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        javax.swing.GroupLayout processesPanelLayout = new javax.swing.GroupLayout(processesPanel);
        processesPanel.setLayout(processesPanelLayout);
        processesPanelLayout.setHorizontalGroup(
            processesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(processesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(processesPanelLayout.createSequentialGroup()
                        .addComponent(ignoreProcessesCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        processesPanelLayout.setVerticalGroup(
            processesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(processesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ignoreProcessesCheckBox)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "DatasetProcesses")); // NOI18N

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.processesPanel.TabConstraints.tabTitle"), processesPanel); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(createFlatFileDatabaseCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.createFlatFileDatabaseCheckBox.text")); // NOI18N
        createFlatFileDatabaseCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                createFlatFileDatabaseCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(createDatabaseIndexesCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.createDatabaseIndexesCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(numberOfInsertsBeforeCommitLabel, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.numberOfInsertsBeforeCommitLabel.text") + ":"); // NOI18N

        numberOfInsertsBeforeCommitSpinner.setValue(DEFAULT_NUMBER_OF_INSERTS);
        insertsSpinnerModel =
        new SpinnerNumberModel(DEFAULT_NUMBER_OF_INSERTS,
            MIN_INSERTS_VALUE, MAX_INSERTS_VALUE, INSERTS_STEP);
        numberOfInsertsBeforeCommitSpinner.setModel(insertsSpinnerModel);

        flatFileSettingsInfoButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(flatFileSettingsInfoButton, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.flatFileSettingsInfoButton.text")); // NOI18N
        flatFileSettingsInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatFileSettingsInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(databasePanelLayout.createSequentialGroup()
                        .addComponent(createDatabaseIndexesCheckBox)
                        .addGap(75, 75, 75)
                        .addComponent(flatFileSettingsInfoButton))
                    .addComponent(createFlatFileDatabaseCheckBox)
                    .addGroup(databasePanelLayout.createSequentialGroup()
                        .addComponent(numberOfInsertsBeforeCommitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfInsertsBeforeCommitSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(418, Short.MAX_VALUE))
        );

        databasePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {createDatabaseIndexesCheckBox, createFlatFileDatabaseCheckBox, numberOfInsertsBeforeCommitLabel});

        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(databasePanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(flatFileSettingsInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(databasePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(createFlatFileDatabaseCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createDatabaseIndexesCheckBox)))
                .addGap(18, 18, 18)
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfInsertsBeforeCommitLabel)
                    .addComponent(numberOfInsertsBeforeCommitSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.databasePanel.TabConstraints.tabTitle"), databasePanel); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(delimitedFilesHaveHeaderCheckBox, org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.delimitedFilesHaveHeaderCheckBox.text")); // NOI18N

        javax.swing.GroupLayout formatPanelLayout = new javax.swing.GroupLayout(formatPanel);
        formatPanel.setLayout(formatPanelLayout);
        formatPanelLayout.setHorizontalGroup(
            formatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delimitedFilesHaveHeaderCheckBox)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        formatPanelLayout.setVerticalGroup(
            formatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formatPanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(delimitedFilesHaveHeaderCheckBox)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(FlatFileSettingsPanel.class, "FlatFileSettingsPanel.formatPanel.TabConstraints.tabTitle"), formatPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void flatFileSettingsInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatFileSettingsInfoButtonActionPerformed
        NotifyDescriptor nd = new NotifyDescriptor.Message(NbBundle.getMessage(FlatFileSettingsPanel.class, "MSG_FlatFileSettingsInfo"));
        Object retval = DialogDisplayer.getDefault().notify(nd);
    }//GEN-LAST:event_flatFileSettingsInfoButtonActionPerformed

    private void createFlatFileDatabaseCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_createFlatFileDatabaseCheckBoxItemStateChanged
        Object source = evt.getItemSelectable();
        if (source == createFlatFileDatabaseCheckBox) {
            if (createFlatFileDatabaseCheckBox.isSelected()) {
                createDatabaseIndexesCheckBox.setSelected(true);
            }
        }
    }//GEN-LAST:event_createFlatFileDatabaseCheckBoxItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox analyseFieldsCheckBox;
    private javax.swing.JCheckBox analyseFlatFilesCheckBox;
    private javax.swing.JCheckBox controlFieldsCheckBox;
    private javax.swing.JCheckBox controlFlatFilesCheckBox;
    private javax.swing.JCheckBox controlForeignKeysCheckBox;
    private javax.swing.JCheckBox controlKeysCheckBox;
    private javax.swing.JCheckBox controlUniquenessCheckBox;
    private javax.swing.JCheckBox createDatabaseIndexesCheckBox;
    private javax.swing.JCheckBox createFlatFileDatabaseCheckBox;
    private javax.swing.JPanel databasePanel;
    private javax.swing.JCheckBox delimitedFilesHaveHeaderCheckBox;
    private javax.swing.JButton flatFileSettingsInfoButton;
    private javax.swing.JPanel formatPanel;
    private javax.swing.JCheckBox ignoreProcessesCheckBox;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel numberOfInsertsBeforeCommitLabel;
    private javax.swing.JSpinner numberOfInsertsBeforeCommitSpinner;
    private javax.swing.JPanel processesPanel;
    // End of variables declaration//GEN-END:variables
}
